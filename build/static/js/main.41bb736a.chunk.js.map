{"version":3,"sources":["Repair.js","RepairForm.js","App.js","index.js"],"names":["Repair","props","className","repair","completed","onClick","completeRepair","type","task","removeRepair","RepairForm","state","repairInput","updateRepairField","e","setState","target","value","createNewRepair","length","preventDefault","render","onSubmit","name","placeholder","autoFocus","onChange","React","Component","App","repairId","repairs","repairString","prevState","id","filter","repairElement","map","rep","clearCompletedRepairs","this","ReactDOM","StrictMode","document","getElementById"],"mappings":"gPAEe,SAASA,EAAOC,GAC7B,OACE,oBAAIC,UAAWD,EAAME,OAAOC,UAAY,YAAc,GAAtD,SACE,sBAAKF,UAAU,OAAf,UACE,uBAAOA,UAAU,SAASG,QAAS,kBAAMJ,EAAMK,eAAeL,EAAME,SAASI,KAAK,aAClF,gCAAQN,EAAME,OAAOK,OACrB,wBAAQN,UAAU,UAAUG,QAAS,kBAAMJ,EAAMQ,aAAaR,EAAME,gB,ICqB7DO,E,4MA1BbC,MAAQ,CACNC,YAAa,I,EAGfC,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CAAEH,YAAaE,EAAEE,OAAOC,S,EAGxCC,gBAAkB,SAAAJ,GACZ,EAAKH,MAAMC,YAAYO,OAAS,GAClC,EAAKlB,MAAMiB,gBAAgB,EAAKP,MAAMC,aAGxC,EAAKG,SAAS,CAAEH,YAAa,KAC7BE,EAAEM,kB,EAGJC,OAAS,WACP,OACE,sBAAMC,SAAU,EAAKJ,gBAArB,SACE,uBAAOK,KAAK,cAAcrB,UAAU,aAAasB,YAAY,6BAA6BC,UAAU,GAAGR,MAAO,EAAKN,MAAMC,YAAac,SAAU,EAAKb,uB,YArBpIc,IAAMC,WC2DhBC,E,4MAxDbC,SAAW,E,EAEXnB,MAAQ,CACNoB,QAAS,I,EAGXb,gBAAkB,SAAAc,GAChB,EAAKjB,UAAS,SAAAkB,GACZ,MAAO,CACLF,QAAQ,GAAD,mBAAME,EAAUF,SAAhB,CAAyB,CAAEvB,KAAMwB,EAAcE,GAAI,EAAKJ,WAAY1B,WAAW,U,EAK5FK,aAAe,SAAAN,GACb,EAAKY,UAAS,SAAAkB,GAAS,MAAK,CAC1BF,QAASE,EAAUF,QAAQI,QAAO,SAAAC,GAAa,OAAIA,IAAkBjC,U,EAIzEG,eAAiB,SAAAH,GACf,EAAKY,UAAS,SAAAkB,GACZ,MAAO,CAAEF,QAASE,EAAUF,QAAQM,KAAI,SAAAC,GAAG,OAAKA,IAAQnC,EAAR,2BAAsBA,GAAtB,IAA8BC,WAAW,IAASkC,U,EAItGC,sBAAwB,WACtB,EAAKxB,UAAS,SAAAkB,GAAS,MAAK,CAC1BF,QAASE,EAAUF,QAAQI,QAAO,SAAAC,GAAa,OAAKA,EAAchC,kB,4CAItE,WAAU,IAAD,OACP,OACE,0BAASF,UAAU,WAAnB,UACE,yBAAQA,UAAU,SAAlB,UACE,oDACA,cAAC,EAAD,CAAYgB,gBAAiBsB,KAAKtB,qBAEpC,yBAAShB,UAAU,OAAnB,SACE,oBAAIA,UAAU,cAAd,SACGsC,KAAK7B,MAAMoB,QAAQM,KAAI,SAAAlC,GAAM,OAC5B,cAACH,EAAD,CAAQG,OAAQA,EAAwBM,aAAc,EAAKA,aAAcH,eAAgB,EAAKA,gBAAjEH,EAAO+B,WAI1C,wBAAQhC,UAAU,SAAlB,SACE,wBAAQA,UAAU,kBAAkBG,QAASmC,KAAKD,sBAAlD,sC,GAhDQX,aCClBa,IAASpB,OACP,cAAC,IAAMqB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.41bb736a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Repair(props) {\n  return (\n    <li className={props.repair.completed ? \"completed\" : \"\"}>\n      <div className=\"view\">\n        <input className=\"toggle\" onClick={() => props.completeRepair(props.repair)} type=\"checkbox\" />\n        <label>{props.repair.task}</label>\n        <button className=\"destroy\" onClick={() => props.removeRepair(props.repair)}></button>\n      </div>\n    </li>\n  );\n}\n\n","import React from \"react\";\n\nclass RepairForm extends React.Component {\n  state = {\n    repairInput: \"\",\n  };\n\n  updateRepairField = e => {\n    this.setState({ repairInput: e.target.value });\n  };\n\n  createNewRepair = e => {\n    if (this.state.repairInput.length > 0) {\n      this.props.createNewRepair(this.state.repairInput);\n    }\n\n    this.setState({ repairInput: \"\" });\n    e.preventDefault();\n  };\n\n  render = () => {\n    return (\n      <form onSubmit={this.createNewRepair}>\n        <input name=\"repairInput\" className=\"new-repair\" placeholder=\"What needs to be repaired?\" autoFocus=\"\" value={this.state.repairInput} onChange={this.updateRepairField} />\n      </form>\n    );\n  };\n}\n\nexport default RepairForm;\n","import React, {Component} from 'react';\nimport Repair from \"./Repair\";\nimport RepairForm from \"./RepairForm\";\n\nclass App extends Component {\n  repairId = 0;\n\n  state = {\n    repairs: [],\n  };\n\n  createNewRepair = repairString => {\n    this.setState(prevState => {\n      return {\n        repairs: [...prevState.repairs, { task: repairString, id: this.repairId++, completed: false }],\n      };\n    });\n  };\n\n  removeRepair = repair => {\n    this.setState(prevState => ({\n      repairs: prevState.repairs.filter(repairElement => repairElement !== repair),\n    }));\n  };\n\n  completeRepair = repair => {\n    this.setState(prevState => {\n      return { repairs: prevState.repairs.map(rep => (rep === repair ? { ...repair, completed: true } : rep)) };\n    });\n  };\n\n  clearCompletedRepairs = () => {\n    this.setState(prevState => ({\n      repairs: prevState.repairs.filter(repairElement => !repairElement.completed),\n    }));\n  };\n\n  render() {\n    return (\n      <section className=\"fixmeapp\">\n        <header className=\"header\">\n          <h1>repðŸ”¥irs</h1>\n          <RepairForm createNewRepair={this.createNewRepair} />\n        </header>\n        <section className=\"main\">\n          <ul className=\"repair-list\">\n            {this.state.repairs.map(repair => (\n              <Repair repair={repair} key={repair.id} removeRepair={this.removeRepair} completeRepair={this.completeRepair}/>\n            ))}\n          </ul>\n        </section>\n        <footer className=\"footer\">\n          <button className=\"clear-completed\" onClick={this.clearCompletedRepairs}>\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}